* 인터페이스: 동일한 목적하의 서로 다른 기능(오버라이딩)을 수행하기 위한 통합
* 구현(객)체: 해당 인터페이스를 구현(오버라이딩)한 클래스로 객체 생성
컬렉션 프레임워크
    - 컬렉션(수집), 프레임워크(미리 만들어진 틀)
    - 자료를 수집하는 방법을 미리 만들어둔 인터페이스/클래스/메소드
    - 복잡한 자료구조를 제공받는다.
- Collection
    [1] List 인터페이스
        - 공통점: 저장된 순서(인덱스) 이용한 데이터 관리, 데이터 중복 허용
        - 1. ArrayList 클래스
            - 객체 선언방법
            List<제네릭타입> 변수명 = new ArrayList<>();
            ArrayList<제네릭타입> 변수명 = new ArrayList<>();
            - 제네릭타입: 리스트 객체에 저장할 요소들의 타입
            - 자주 사용되는 메소드
                1. .add(요소): 리스트내 요소 추가
                2. .set(인덱스, 요소): 리스트내 특정 인덱스에 요소 삽입
                3. .size(): 리스트내 요소 개수
                4. .get(인덱스): 리스트내 특정 인덱스의 요소 값 호출
                5. .contains(값/객체): 리스트내 특정 값 또는 객체를 검색해 존재하면 true 없으면 false
                6. .index(값/객체): 리스트내 특정 값 또는 객체를 검색하여 존재하면 찾은 인덱스 반환, 없으면 -1
                7. .remove(인덱스/객체): 리스트내 특정 인덱스 또는 객체가 존재하면 요소 삭제
                8. .clear(): 리스트내 전체 요소 삭제
                9. .isEmpty(): 리스트내 요소가 하나도 없으면 true, 1개 이상이면 false

        - 2. Vector 클래스
            - List 메소드에 동기화가 추가된 클래스
            - 멀티스레드를 구현시 사용

        - 3. LinkedList 클래스
            - 중간 삽입/삭제 사용시 ArrayList 보다 좋은 성능을 가진다.

    [2] Set 인터페이스
        - 공통점: 저장된 순서(인덱스) 없고, 데이터 중복 허용하지 않는다.
        - 1. HashSet 클래스
        1. .add(요소) : set 객체 내 요소 추가
        2. .size() : set 객체 내 요소 총 개수
        3. .remove(요소) : set 객체 내 특정 요소 제거
        4. .contains(요소) : set 객체 내 특정 요소 존재 여부 확인
        5. .clear() : set 객체 내 모든 요소 제거
        6. .isEmpty() : set 객체가 비어 있는지 여부 확인
        7. .iterator() : set 객체의 iterator 반환
        8. iterator.hasNext() : iterator에 다음 요소가 있는지 여부 확인
        9. iterator.next() : iterator의 다음 요소 반환

    [3] Map 인터페이스
        - 공통점: 저장된 순서(인덱스) 없고, key-value 로 이뤄진 한쌍(엔트리)
        - key : 중복 불가능, value: 중복 가능
        - 1. HashMap 클래스

        - 자주 사용되는 메소드
            1. put(key, value): key와 value 엔트리 추가
            2. size(): map 객체내 엔트리 개수
            3. get(key): map 객체내 key 해당하는 value 반환
            4. remove(key): map 객체내 key 해당하는 엔트리 삭제
            5. clear(): map 객체내 전체 엔트리 삭제
            6. isEmpty(): map 객체내 엔트리가 하나도 없으면 true 요소가 존재하면 false
            7. keySet(): map 객체내 모든 key 반환
            8. values(): map 객체내 모든 value 반환
            9. entrySet(): map 객체내 모든 entry 반환

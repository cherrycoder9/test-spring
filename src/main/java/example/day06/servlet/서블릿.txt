HTTP: 하이퍼텍스트 전송 프로토콜
    - 하이퍼텍스트: 이동이 가능한 텍스트/문자
    - 전송: 통신
    - 프로토콜: 규약, 규칙, 법
    - 통신 방식 / 메소드: 주어진 리소스(자료)에 수행하길 원하는 행위/메소드
        - POST(보낼때/저장C), GET(받을때/조회R), PUT(보낼때/수정U), DELETE(삭제할때/D)
            - 관례적으로 사용되고 가독성을 위해 구분해서 사용, 만일 GET으로 CRUD 구현한다고 하면 가능하다.
        - 차이점: 멱등성


서블릿: 자바를 사용해 웹페이지를 동적으로 생성하는 프로그램
    - 웹 서버의 성능을 향상하기 위해 사용되는 일종의 클래스
    - 자바 회사에서 웹 개발을 하기 위한 웹 관련 클래스를 제공
    - 서블릿 사용하는 방법
        1. 해당 클래스에 HttpServlet 상속받는다
        2. 외부로부터 해당 클래스를 연결/매핑 할 수 있도록 HTTP url(인터넷 웹 주소) 정의하기
        - 해당 클래스에 @(어노테이션)WebServlet("/URL")
        3. HttpServlet의 다양한 메소드 제공
            - init()    : [최초 서블릿 요청시 1번] 톰캣 프로그램내 해당 클래스가 객체를 생성할 때 실행되는 메소드/함수
            - service() : [요청이 들어올 때 마다] HTTP를 이용한 웹서버로부터 요청이 들어올때 실행되는 메소드/함수
            - destroy() : [서버가 종료될때 1번] 웹서버 내 해당 클래스의 서블릿 객체가 초기화될때 실행되는 메소드/함수
            - doGet()   : HTTP를 이용한 서버로부터 요청이 들어올때 HTTP의 method가 GET이면 호출되는 메소드/함수
            - doPost()  :
            - doPut()   :
            - doDelete():

4. HTTP 요청의 자료/데이터 주고 받기
    http://ip주소:port번호/서블릿주소?key=value
        - url?key=value&key=value&key=value
    1. HttpServletRequest : 클라이언트로부터 요청 받을때 요청 정보를 가지는 클래스
        - 메소드
            .getParameter("key") : 해당하는 key의 value의 데이터를 문자열 타입 반환
    2. HttpServletResponse : 클라이언트로부터 응답 보낼때 응답 정보를 가지는 클래스
        - 메소드
            .getWriter().print("value") : 해당하는 value를 요청을 보낸 클라이언트에게 응답값을 보낸다

HTTP 다양한 메소드를 테스트/사용하는 방법
    1. [테스트용] Talend API
    2. [JS개발용] AJAX

웹서버에 요청 관계
    - 브라우저도 웹서버도 HTTP 프로토콜을 사용할 수 있어야 한다.
    - 브라우저는 기본적으로 HTTP 사용하고, 웹서버는 서블릿 클래스 이용한 HTTP 사용


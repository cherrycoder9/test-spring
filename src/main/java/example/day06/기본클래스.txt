- 래퍼 클래스
    - 기본타입(8가지) 자료를 참조타입으로 변환 (기본타입의 자료들을 감싼 참조타입)
    - 왜?? 기본타입에서는 메소드/기능을 사용할 수 없으므로 필요에 따라 기본타입에서 메소드 사용시 필요
    - Byte, Short, Integer, Long, Float, Double, Boolean, Character
    - 자주 사용되는 메소드
        1. 문자열(String) --> 각 기본타입 변환
            Byte.parseByte("문자열");
            Short.parseShort("문자열");
            Integer.parseInt("문자열");
            Long.parseLong("문자열");
            Float.parseFloat("문자열");
            Double.parseDuble("문자열");
    - 오토 박싱, 언박싱
        오토박싱: 기본타입을 참조타입에 대입, Integer value = 10;
        언박싱: 참조타입을 기본타입에 대입, int value = new Integer(10);

- class 클래스
    - 클래스의 정보와 메모리 로딩 지원하는 클래스
    - 해당 클래스를 Class 타입으로 가져오는 방법
        [1] Class c = 참조변수.getClass();
        [2] Class c = 클래스명.Class();
        [3] Class c = Class.forName("패키지명.클래스명");
            - .forName(): 패키지명.클래스명: 해당 패키지내 클래스를 호출

    - 리플렉션: 클래스, 인터페이스 정보를 찾아서 확인하는 방법, 일반적으로 잘 활용되지 않는다.
        - getContructors(); 모든 생성자 정보를 배열 반환
        - getFields(); 해당 클래스의 모든 필드 정보를 배열 반환
        - getMethods(); 해당 클래스의 모든 메소드 정보를 배열 반환

    - 동적 로딩: JDK 외 외부 라이브러리로부터 클래스 직접 메모리 적재할 때 사용된다.
        - 데이터베이스(자바 외 라이브러리)의 클래스를 호출할 때
            - Class.forName("com.mysql.cj.jdbc.Driver"); 현재 프로젝트내 해당 Driver 클래스를 메모리 저장
            - 주의할점: ClassNotFoundException 일반예외 발생할 수 있다.
                ClassNotFoundException: 만일 Class.forName()에 작성한 클래스가 존재하지 않을때 오류 발생
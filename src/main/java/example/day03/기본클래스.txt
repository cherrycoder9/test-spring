

2. Object
    - 자바에서 최상위 클래스 (모든 클래스들의 조상, 모든 클래스들은 Object 상속받는다)
    - 모든 클래스는 자동으로 extends Object 된다.
        - 왜? 자바는 100% 객체지향 구현하기 위해 설계된 구조
    - 주로 메소드
        1. toString(): 객체를 문자열로 표현하여 반환 함수, 주로 오버라이딩해서 객체의 설명, 변수 값을 반환
        2. equals(Object obj): 두 객체가 동일한지 여부를 반환 함수, 오버라이딩해서 동일한 객체임을 정의할 수 있다.
            - == vs equals
            - == : 스택 메모리(주로 지역변수)가 가지는 (리터럴)값/참조 값 비교, 주로 기본타입 비교시 사용
            - equals: 힙 메모리가 가지는 참조값 비교, 주로 참조타입 시 사용
                - 10 == 10 // true
                - "A" == "A" // true
                - new String(10).equals(new String(10)) // false, new 사용시 서로 다른 주소 생성되므로
        3. hashCode(): 객체의 해시코드값(주소값 찾아가는 위치) 반환 함수
            - 해시(Hash)는 정보를 저장하거나 검색할 때 사용하는 자료구조 입니다.
            - 정보를 어디에 저장할 것인지, 어디서 가져올 것인지 해시 함수를 사용하는 방법
            - 해시 함수란 객체의 특정 정보를 매개변수 값으로 넣으면 그 객체가 저장되어야 할 위치나 저장된 해시 테이블주소(위치)를 반환
        4. clone(): 객체를 복제해서 동일한 멤버변수를 가진 새로운 객체 반환 함수
            - Cloneable 인터페이스를 inplements 구현해서 구현클래스 이용한 clone() 메소드를 재정의/오버라이딩 해서 사용함

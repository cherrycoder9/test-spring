프로그램: 프로그래밍 언어들의 명령어 집합
프로세스: 현재 실행중인 프로그램
    - 프로그램 1개당 프로세스 존재
멀티 태스킹: 두 가지 이상의 일/ 프로그램 동시 처리
멀티 프로세스: 운영체제가 동시에 여러 개의 프로세스 생성해서 처리 기술
    - 멀티 프로세스가 프로그램 단위 멀티 태스킹
    - 멀티 프로세스는 서로 독립적이다. (서로에게 영향이 없다)
        - 멀티 프로세스: 카카오톡(프로그램/프로세스), 크롬 브라우저(프로그램/프로세스)
        - 만약에 카톡에서 오류/문제 발생했을때 크롬 브라우저는 정상이다.
스레드: 프로세스 내에서 실행되는 흐름의 단위
    - 싱글 스레드: 프로세스내 실행흐름이 1개이다
    - 멀티 스레드: 프로세스 내 실행흐름이 2개 이상이다.
    - 멀티 스레드가 쓰레드 단위의 멀티 태스킹
    - 멀티 스레드는 서로 종속적이다. (서로에게 영향이 있다)
        - 멀티 스레드: 카카오톡(메시지전송, 파일전송, 사진전송 등등)
        - 만약에 파일전송시 오류가 발생하면 카카오톡 프로세스가 종료 되므로 메시지 전송도 같이 종료된다
싱글 스레드 구현x / 제공받는다
    - 자바 코드를 컴파일해서 실행하기 위한 내장 싱글스레드 제공한다 -> main 함수
멀티 스레드 구현
    * extends: 하나의 클래스로부터만 상속받을 수 있다.
    * implements: 여러개의 인터페이스로부터 구현 할 수 있다.
    - 익명 구현체: 구현하는 클래스가 이름이 없다. 1회성 구현체 만들때 주로 사용
    [1] Thread 클래스로부터 상속 받아 run 메소드 재정의
        1. class 클래스명 extends Thread {}
        2. @Override public void run() {멀티로 처리할 코드/실행문;}
        3. 클래스 변수명 = new 생성자();
        4. 변수명.start();
    [2] Runnable 인터페이스로부터 구현해서 run 메소드 재정의 (권장하는 방법)
        1. class 클래스명 implements Runnable {}
        2. @Override public void run() {멀티로 처리할 코드/실행문;}
        3. Runnable 변수명(구현체) = new 클래스명();
        4. Thread thread = new Thread(변수명/구현체);
        5. thread.start();
    [3-1] (익명) 구현체
        1. Thread thread = new Thread() {
            @Override public void run() {
                멀티로 처리할 코드/실행문;
            }
        };
        2. thread.start();

    [3-2] (익명) 구현체
        1. Thread thread = new Thread(new Runnable() {
            @Override public void run() {
                멀티로 처리할 코드/실행문;
            }
        });
        2. thread.start()

